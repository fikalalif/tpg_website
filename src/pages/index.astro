---
import "../styles/global.css";
import SwiperCarousel from "../components/SwiperCarousel.jsx";
import SwiperCarouselClient from "../components/SwiperCarouselClient.jsx";
import Footer from "../components/Footer.astro";
import Navbar from "../components/Navbar.astro";
import ModelViewer from "../components/ModelViewer";
---

<html lang="en">
<head>
  <meta charset="utf-8" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
   <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="generator" content={Astro.generator} />
  <script
    type="module"
    src="https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js"
  ></script>
  <title>Tempat Peraduan Group</title>

  {/* Global styles for elegant animations */}
  <style is:global>
    /* Loading Screen Styles */
    .loading-screen {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: linear-gradient(135deg, #000000 0%, #1a1a1a 50%, #000000 100%);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      transition: all 1s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .loading-screen.fade-out {
      opacity: 0;
      visibility: hidden;
      transform: scale(1.1);
    }

    .loading-logo {
      animation: logoEntrance 3s cubic-bezier(0.4, 0, 0.6, 1) forwards;
      filter: drop-shadow(0 0 30px rgba(255, 255, 255, 0.3));
    }

    @keyframes logoEntrance {
      0% {
        transform: rotateY(0deg) scale(0.3);
        opacity: 0;
        filter: blur(10px) drop-shadow(0 0 30px rgba(255, 255, 255, 0.3));
      }
      25% {
        opacity: 1;
        filter: blur(5px) drop-shadow(0 0 40px rgba(255, 255, 255, 0.5));
      }
      50% {
        transform: rotateY(180deg) scale(0.6);
        filter: blur(2px) drop-shadow(0 0 50px rgba(255, 255, 255, 0.7));
      }
      75% {
        transform: rotateY(360deg) scale(0.9);
        filter: blur(1px) drop-shadow(0 0 60px rgba(255, 255, 255, 0.8));
      }
      100% {
        transform: rotateY(720deg) scale(1.2);
        opacity: 1;
        filter: blur(0px) drop-shadow(0 0 80px rgba(255, 255, 255, 1));
      }
    }

    .loading-text {
      position: absolute;
      bottom: 30%;
      left: 50%;
      transform: translateX(-50%);
      color: white;
      font-size: 1.2rem;
      font-weight: 300;
      letter-spacing: 3px;
      animation: textPulse 2s ease-in-out infinite;
    }

    @keyframes textPulse {
      0%, 100% {
        opacity: 0.6;
        transform: translateX(-50%) translateY(0px);
      }
      50% {
        opacity: 1;
        transform: translateX(-50%) translateY(-5px);
      }
    }

    .loading-particles {
      position: absolute;
      width: 100%;
      height: 100%;
      overflow: hidden;
    }

    .particle {
      position: absolute;
      width: 2px;
      height: 2px;
      background: rgba(255, 255, 255, 0.6);
      border-radius: 50%;
      animation: particleFloat 4s linear infinite;
    }

    @keyframes particleFloat {
      0% {
        transform: translateY(100vh) rotate(0deg);
        opacity: 0;
      }
      10% {
        opacity: 1;
      }
      90% {
        opacity: 1;
      }
      100% {
        transform: translateY(-10vh) rotate(360deg);
        opacity: 0;
      }
    }

    /* Enhanced existing animations */
    @keyframes fadeInDown {
      from {
        opacity: 0;
        transform: translateY(-30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .animate-fadeInDown {
      animation: fadeInDown 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    /* Enhanced navbar animations */
    .navbar-scrolled {
      backdrop-filter: blur(25px);
      transform: translateY(0);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .navbar-scrolled > div {
      opacity: 0.95 !important;
      box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
      border-color: rgba(180, 180, 180, 0.8);
    }

    #mobile-menu:not(.js-initialized) {
      display: none !important;
    }

    .hamburger-line {
      transform-origin: center;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .nav-link.active::after {
      content: "";
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 100%;
      height: 2px;
      background: linear-gradient(90deg, #ffffff, #d1d5db);
    }

    html {
      scroll-behavior: smooth;
    }

    .mobile-nav-link:hover {
      transform: translateX(6px);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    nav {
      animation: slideDown 1s cubic-bezier(0.4, 0, 0.2, 1);
    }

    @keyframes slideDown {
      from {
        transform: translateY(-100%);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    /* Enhanced content animations */
    @keyframes fade-in-scale {
      from {
        opacity: 0;
        transform: scale(0.95) translateY(20px);
      }
      to {
        opacity: 1;
        transform: scale(1) translateY(0);
      }
    }

    .animate-fade-in-scale {
      animation: fade-in-scale 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(40px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    footer {
      animation: fadeInUp 1s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* Enhanced gradient animations */
    .gradient-border {
      background: linear-gradient(
        45deg,
        transparent,
        rgba(255, 255, 255, 0.15),
        transparent
      );
      background-size: 200% 200%;
      animation: gradientShift 4s ease infinite;
    }

    @keyframes gradientShift {
      0%, 100% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
    }

    /* Stagger animations for elements */
    .stagger-animation {
      opacity: 0;
      transform: translateY(30px);
      animation: staggerFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    @keyframes staggerFadeIn {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Enhanced hover effects */
    .enhanced-hover {
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .enhanced-hover:hover {
      transform: translateY(-5px) scale(1.02);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
    }

    /* Parallax effect for background */
    .parallax-bg {
      transform: translateZ(0);
      transition: transform 0.1s ease-out;
    }

    /* Content reveal animation */
    .content-hidden {
      opacity: 0;
      transform: translateY(50px);
    }

    .content-visible {
      opacity: 1;
      transform: translateY(0);
      transition: all 1s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* Smooth page transitions */
    .page-transition {
      opacity: 0;
      transform: translateY(20px);
      animation: pageEnter 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    @keyframes pageEnter {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  </style>
</head>

<body class="bg-black text-center w-full max-w-full overflow-x-hidden font-monsserat">
  <!-- Loading Screen -->
  <div id="loading-screen" class="loading-screen">
    <div class="loading-particles" id="particles-container"></div>
    <div class="relative">
      <img
        src="tpg_center.png"
        alt="TPG Logo"
        class="loading-logo h-72"
        id="loading-logo"
      />
      <!-- <div class="loading-text">TEMPAT PERADUAN GROUP</div> -->
    </div>
  </div>

  <!-- Main Content (initially hidden) -->
  <div id="main-content" class="content-hidden">
    <nav>
      <Navbar/>
    </nav>

    <main class="pt-1 md:pt-1 page-transition">
      <div class="relative w-full h-screen stagger-animation">
        <img
          src="/bg_top.jpg"
          alt="Background"
          class="absolute inset-0 w-full h-full object-cover z-0 parallax-bg"
          id="parallax-bg"
        />
        <div class="">
          <ModelViewer client:only="react" />
        </div>
      </div>
    </main>

    <div class="stagger-animation enhanced-hover">
      <SwiperCarousel client:only="react" />
    </div>

    <div class="stagger-animation enhanced-hover">
      <SwiperCarouselClient client:only="react" />
    </div>

    <footer>
      <Footer/>
    </footer>
  </div>

  <script>
    // Loading Screen Logic
    function createParticles() {
      const container = document.getElementById('particles-container');
      const particleCount = 50;
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        particle.style.left = Math.random() * 100 + '%';
        particle.style.animationDelay = Math.random() * 4 + 's';
        particle.style.animationDuration = (Math.random() * 3 + 2) + 's';
        container?.appendChild(particle);
      }
    }

    function hideLoadingScreen() {
      const loadingScreen = document.getElementById('loading-screen');
      const mainContent = document.getElementById('main-content');
      
      setTimeout(() => {
        loadingScreen?.classList.add('fade-out');
        
        setTimeout(() => {
          if (loadingScreen) {
            loadingScreen.style.display = 'none';
          }
          if (mainContent) {
            mainContent.classList.remove('content-hidden');
            mainContent.classList.add('content-visible');
          }
          
          // Trigger stagger animations
          const staggerElements = document.querySelectorAll('.stagger-animation');
          staggerElements.forEach((el, index) => {
            setTimeout(() => {
              el.style.animationDelay = `${index * 0.1}s`;
              el.classList.add('animate-fade-in-scale');
            }, index * 100);
          });
        }, 1000);
      }, 3500); // Show loading for 3.5 seconds
    }

    // Initialize loading screen
    document.addEventListener('DOMContentLoaded', function() {
      createParticles();
      hideLoadingScreen();
    });

    // Enhanced Mobile Menu Logic
    const toggleBtn = document.getElementById("hamburger-btn");
    const mobileMenu = document.getElementById("mobile-menu");
    document.getElementById('current-year')!.textContent = new Date().getFullYear().toString();

    if (toggleBtn && mobileMenu) {
      toggleBtn.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
        
        if (mobileMenu.classList.contains("hidden")) {
          toggleBtn.innerHTML = `
            <div class="hamburger-icon w-6 h-6 flex flex-col justify-center items-center space-y-1">
              <span class="hamburger-line block w-6 h-0.5 bg-white transition-all duration-500"></span>
              <span class="hamburger-line block w-6 h-0.5 bg-white transition-all duration-500"></span>
              <span class="hamburger-line block w-6 h-0.5 bg-white transition-all duration-500"></span>
            </div>
          `;
        } else {
          toggleBtn.innerHTML = `
            <div class="hamburger-icon w-6 h-6 flex flex-col justify-center items-center space-y-1">
              <span class="hamburger-line block w-6 h-0.5 bg-white transition-all duration-500 rotate-45 translate-y-1.5"></span>
              <span class="hamburger-line block w-6 h-0.5 bg-white transition-all duration-500 opacity-0"></span>
              <span class="hamburger-line block w-6 h-0.5 bg-white transition-all duration-500 -rotate-45 -translate-y-1.5"></span>
            </div>
          `;
        }
      });
    }

    // Enhanced Navigation Logic
    document.addEventListener('DOMContentLoaded', function () {
      const hamburgerBtn = document.getElementById('hamburger-btn');
      const mobileMenu = document.getElementById('mobile-menu');
      const mobileMenuContent = mobileMenu?.querySelector('.mobile-menu-content');
      const hamburgerLines = document.querySelectorAll('.hamburger-line');
      const navbar = document.getElementById('navbar');
      const parallaxBg = document.getElementById('parallax-bg');
      let isMenuOpen = false;

      // Enhanced hamburger menu
      hamburgerBtn?.addEventListener('click', () => {
        isMenuOpen = !isMenuOpen;
        
        if (isMenuOpen) {
          mobileMenu?.classList.remove('max-h-0', 'hidden');
          mobileMenu?.classList.add('max-h-screen');
          
          setTimeout(() => {
            mobileMenuContent?.classList.remove('opacity-0', 'translate-y-4');
            mobileMenuContent?.classList.add('opacity-100', 'translate-y-0');
          }, 50);
          
          hamburgerLines[0]?.classList.add('rotate-45', 'translate-y-1.5');
          hamburgerLines[1]?.classList.add('opacity-0');
          hamburgerLines[2]?.classList.add('-rotate-45', '-translate-y-1.5');
        } else {
          mobileMenuContent?.classList.remove('opacity-100', 'translate-y-0');
          mobileMenuContent?.classList.add('opacity-0', 'translate-y-4');
          
          setTimeout(() => {
            mobileMenu?.classList.remove('max-h-screen');
            mobileMenu?.classList.add('max-h-0');
          }, 200);
          
          hamburgerLines[0]?.classList.remove('rotate-45', 'translate-y-1.5');
          hamburgerLines[1]?.classList.remove('opacity-0');
          hamburgerLines[2]?.classList.remove('-rotate-45', '-translate-y-1.5');
        }
      });

      // Close mobile menu on link click
      document.querySelectorAll('.mobile-nav-link').forEach(link => {
        link.addEventListener('click', () => {
          if (isMenuOpen) {
            hamburgerBtn?.click();
          }
        });
      });

      // Enhanced navbar scroll effect with parallax
      let lastScrollY = window.scrollY;
      window.addEventListener('scroll', () => {
        const currentScrollY = window.scrollY;
        
        // Navbar effects
        if (currentScrollY > 100) {
          navbar?.classList.add('navbar-scrolled');
        } else {
          navbar?.classList.remove('navbar-scrolled');
        }
        
        if (currentScrollY > lastScrollY && currentScrollY > 200) {
          navbar?.classList.add('-translate-y-full');
        } else {
          navbar?.classList.remove('-translate-y-full');
        }
        
        // Parallax effect
        if (parallaxBg) {
          const parallaxSpeed = currentScrollY * 0.5;
          parallaxBg.style.transform = `translateY(${parallaxSpeed}px) translateZ(0)`;
        }
        
        lastScrollY = currentScrollY;
      });

      

      // Enhanced smooth scroll
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (this: HTMLAnchorElement, e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href')!);
          if (target) {
            const offsetTop = (target as HTMLElement).offsetTop - 100;
            window.scrollTo({
              top: offsetTop,
              behavior: 'smooth'
            });
          }
        });
      });

      // Enhanced stagger animation for desktop links
      const navLinks = document.querySelectorAll('.nav-link');
      navLinks.forEach((link, index) => {
        const navLink = link as HTMLElement;
        navLink.style.animationDelay = `${index * 0.1}s`;
        navLink.classList.add('animate-fadeInDown');
      });

      // Intersection Observer for scroll animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-fade-in-scale');
          }
        });
      }, observerOptions);

      // Observe all stagger elements
      document.querySelectorAll('.stagger-animation').forEach(el => {
        observer.observe(el);
      });

      // Fix flash on load
      mobileMenu?.classList.add('js-initialized');
    });

    // Page transition effects for routing
    window.addEventListener('beforeunload', () => {
      document.body.style.opacity = '0';
      document.body.style.transform = 'translateY(20px)';
    });

    // Enhanced mouse movement effects
    document.addEventListener('mousemove', (e) => {
      const cards = document.querySelectorAll('.enhanced-hover');
      const mouseX = e.clientX;
      const mouseY = e.clientY;
      
      cards.forEach(card => {
        const rect = card.getBoundingClientRect();
        const cardX = rect.left + rect.width / 2;
        const cardY = rect.top + rect.height / 2;
        
        const deltaX = (mouseX - cardX) * 0.01;
        const deltaY = (mouseY - cardY) * 0.01;
        
        (card as HTMLElement).style.transform = `perspective(1000px) rotateX(${-deltaY}deg) rotateY(${deltaX}deg)`;
      });
    });

    // Reset transforms when mouse leaves
    document.addEventListener('mouseleave', () => {
      const cards = document.querySelectorAll('.enhanced-hover');
      cards.forEach(card => {
        (card as HTMLElement).style.transform = '';
      });
    });
  </script>
</body>
</html>
